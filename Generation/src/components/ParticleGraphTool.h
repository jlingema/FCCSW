
#ifndef GENERATION_PARTICLEGRAPHTOOL_H
#define GENERATION_PARTICLEGRAPHTOOL_H
// Gaudi
#include "GaudiAlg/GaudiTool.h"
// FWCore
#include "FWCore/DataHandle.h"
// The abstract interface
#include "Generation/IParticleGraph.h"

namespace fcc {
class MCParticleCollection;
class ParticleGraph;
}

/** @class ParticleGraphTool ParticleGraphTool.h
 *
 *  @implements IParticleGraph
 *  This tool retrieves the graph from TES and exposes convenience functions for graph traversal to the user.
 *
 *  @author J. Lingemann
 *  @date   2016-07-19
 */

class ParticleGraphTool: public GaudiTool, virtual public IParticleGraph {
public:
  ParticleGraphTool( const std::string& type, const std::string& name,
                     const IInterface* parent) ;
  virtual ~ParticleGraphTool();

  using GaudiTool::initialize;
  using GaudiTool::finalize;

  /** Get children of a MC particle
   *  @implements IParticleGraph::getChildParticles
   */
  virtual const fcc::ParticleVector childParticles(const fcc::ConstMCParticle&, int numGenerations=-1) final;
  /** Get parents of a MC particle
   *  @implements IParticleGraph::parentParticles
   */
  virtual const fcc::ParticleVector parentParticles(const fcc::ConstMCParticle&, int numGenerations=-1) final;
  /** Get child nodes of the node corresponding to a MC particle.
   *  @implements IParticleGraph::childNodes
   */
  virtual const fcc::NodeVector& childNodes(const fcc::ConstMCParticle&, int numGenerations=-1) final;
  /** Get parent nodes of the node corresponding to a MC particle
   * @implements IParticleGraph::parentNodes
   */
  virtual const fcc::NodeVector& parentNodes(const fcc::ConstMCParticle&, int numGenerations=-1) final;
  /// Get the node corrsponding to a MC particle
  virtual const fcc::IdNode& node(const fcc::ConstMCParticle&) final;
  /// Get the particle corresponding to a node
  virtual fcc::ConstMCParticle particle(const fcc::IdNode&) final;

private:
  /// Translate a vector of nodes into a vector of particles
  fcc::ParticleVector translate(const fcc::NodeVector& nodes);

  /// Handle to the generated particles (property generatedParticles)
  DataHandle<fcc::MCParticleCollection> m_particleCollHandle;
  /// Handle to the graph (generated by GraphBuilder algorithm) (property particleGraph)
  DataHandle<fcc::ParticleGraph> m_graphHandle;
  /// The visitor instance used to traverse the graph
  DAG::BFSVisitor<fcc::IdNode> m_visitor;
};

#endif // GENERATION_PARTICLEGRAPHTOOL_H
